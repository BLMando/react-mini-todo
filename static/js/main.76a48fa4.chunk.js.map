{"version":3,"sources":["components/Header.js","context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","App.js","index.js"],"names":["Header","className","TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","Task","useContext","onClick","icon","faTrashAlt","faPenAlt","TaskList","length","key","TaskForm","setTitle","onSubmit","e","preventDefault","onChange","target","type","placeholder","required","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76a48fa4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Task Manager</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { createContext, useState, useEffect } from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nexport const TaskListContext = createContext();\r\n\r\nconst TaskListContextProvider = (props) => {\r\n  const initialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  const [tasks, setTasks] = useState(initialState);\r\n\r\n  const [editItem, setEditItem] = useState();\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (title) => {\r\n    setTasks([...tasks, { title, id: uuid() }]);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const clearList = () => {\r\n    setTasks([]);\r\n  };\r\n\r\n  const findItem = (id) => {\r\n    const item = tasks.find((task) => task.id === id);\r\n    setEditItem(item);\r\n  };\r\n\r\n  const editTask = (title, id) => {\r\n    const newTasks = tasks.map((task) =>\r\n      task.id === id ? { title, id } : task\r\n    );\r\n    setTasks(newTasks);\r\n    setEditItem(null);\r\n  };\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        clearList,\r\n        findItem,\r\n        editTask,\r\n        editItem,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskListContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faPenAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\n\r\nconst Task = ({ task }) => {\r\n  const { removeTask, findItem } = useContext(TaskListContext);\r\n  return (\r\n    <li className=\"list-item\">\r\n      <span>{task.title}</span>\r\n      <div>\r\n        <button className=\"btn-delete task-btn\" onClick={() =>removeTask(task.id)}>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </button>\r\n        <button className=\"btn-edit task-btn\" onClick={()=>findItem(task.id)}>\r\n          <FontAwesomeIcon icon={faPenAlt} />\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = () => {\r\n  const { tasks } = useContext(TaskListContext);\r\n  return (\r\n    <div>\r\n      {tasks.length ? (\r\n        <ul className=\"list\">\r\n        {tasks.map((task) => (\r\n          <Task task={task} key={task.id}/>\r\n        ))}\r\n      </ul>\r\n      ) : (\r\n        <div className=\"no-tasks\">No Tasks</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { TaskListContext } from \"../context/TaskListContext\";\r\n\r\nconst TaskForm = () => {\r\n  const { addTask, clearList, editItem, editTask } = useContext(\r\n    TaskListContext\r\n  );\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!editItem) {\r\n      addTask(title);\r\n      setTitle(\"\");\r\n    } else {\r\n      editTask(title, editItem.id);\r\n      setTitle(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setTitle(editItem.title);\r\n    } else {\r\n      setTitle(\"\");\r\n    }\r\n  }, [editItem]);\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <input\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        value={title}\r\n        className=\"task-input\"\r\n        placeholder=\"Add a task\"\r\n        required\r\n      />\r\n      <div className=\"buttons\">\r\n        <button type=\"submit\" className=\"btn add-task-btn\">\r\n          {editItem ? \"Update\" : \"Add\"}\r\n        </button>\r\n        <button className=\"btn clear-btn\" onClick={clearList}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React from \"react\";\nimport \"./app.css\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskListContextProvider from \"./context/TaskListContext\";\n\nfunction App() {\n  return (\n    <TaskListContextProvider>\n      <div className=\"container\">\n        <div className=\"appWrapper\">\n          <Header />\n          <div className=\"main\">\n            <TaskForm />\n            <TaskList />\n          </div>\n        </div>\n      </div>\n    </TaskListContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}